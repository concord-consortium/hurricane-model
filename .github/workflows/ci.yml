name: Continuous Integration

on: push

jobs:
  build_test:
    name: Build and Run Jest Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v4
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      - name: Build
        run: npm run build
        env:
            NODE_OPTIONS: --openssl-legacy-provider
      - name: Run Tests
        run: npm run test:coverage -- --runInBand
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: jest
  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: cypress-io/github-action@v6
        with:
          install-command: npm ci --legacy-peer-deps
          start: npm start
          wait-on: 'http://localhost:8080'
          # only record the results to dashboard.cypress.io if CYPRESS_RECORD_KEY is set
          record: ${{ !!secrets.CYPRESS_RECORD_KEY }}
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # turn on code coverage when running npm start
          # so far we've been using a webpack coverage-istanbul-loader for this
          # but there has been work on using the code coverage support in the browser directly,
          # which should be much faster
          CODE_COVERAGE: true
          # Also turn on the code coverage tasks in cypress itself, these are disabled
          # by default.
          CYPRESS_coverage: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: cypress
  s3-deploy:
    name: S3 Deploy
    needs:
      - build_test
    #   - cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
        env:
          # skip installing cypress since it isn't needed for just building
          # This decreases the deploy time quite a bit
          CYPRESS_INSTALL_BINARY: 0
      - uses: concord-consortium/s3-deploy-action@v1
        with:
          bucket: models-resources
          prefix: hurricane-model
          build: env NODE_OPTIONS=--openssl-legacy-provider npm run build
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          deployRunUrl: https://models-resources.concord.org/hurricane-model/__deployPath__/index.html
          # Parameters to GHActions have to be strings, so a regular yaml array cannot
          # be used. Instead the `|` turns the following lines into a string
          topBranches: |
            ["master"]
